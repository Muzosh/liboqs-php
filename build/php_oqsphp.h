/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef PHP_OQSPHP_H
#define PHP_OQSPHP_H

extern zend_module_entry oqsphp_module_entry;
#define phpext_oqsphp_ptr &oqsphp_module_entry

#ifdef PHP_WIN32
# define PHP_OQSPHP_API __declspec(dllexport)
#else
# define PHP_OQSPHP_API
#endif

static PHP_METHOD(CustomException,__construct);
static PHP_METHOD(CustomException,what);
PHP_METHOD(CustomException,__set);
PHP_METHOD(CustomException,__get);
PHP_METHOD(CustomException,__isset);
static PHP_FUNCTION(OQS_randombytes);
static PHP_FUNCTION(OQS_randombytes_switch_algorithm);
static PHP_FUNCTION(OQS_SIG_alg_identifier);
static PHP_FUNCTION(OQS_SIG_alg_count);
static PHP_FUNCTION(OQS_SIG_alg_is_enabled);
static PHP_METHOD(OQS_SIGNATURE,sig_struct_set);
static PHP_METHOD(OQS_SIGNATURE,sig_struct_get);
static PHP_METHOD(OQS_SIGNATURE,method_name_set);
static PHP_METHOD(OQS_SIGNATURE,method_name_get);
static PHP_METHOD(OQS_SIGNATURE,alg_version_set);
static PHP_METHOD(OQS_SIGNATURE,alg_version_get);
static PHP_METHOD(OQS_SIGNATURE,claimed_nist_level_set);
static PHP_METHOD(OQS_SIGNATURE,claimed_nist_level_get);
static PHP_METHOD(OQS_SIGNATURE,euf_cma_set);
static PHP_METHOD(OQS_SIGNATURE,euf_cma_get);
static PHP_METHOD(OQS_SIGNATURE,length_public_key_set);
static PHP_METHOD(OQS_SIGNATURE,length_public_key_get);
static PHP_METHOD(OQS_SIGNATURE,length_private_key_set);
static PHP_METHOD(OQS_SIGNATURE,length_private_key_get);
static PHP_METHOD(OQS_SIGNATURE,length_signature_set);
static PHP_METHOD(OQS_SIGNATURE,length_signature_get);
static PHP_METHOD(OQS_SIGNATURE,__construct);
static PHP_METHOD(OQS_SIGNATURE,keypair);
static PHP_METHOD(OQS_SIGNATURE,sign);
static PHP_METHOD(OQS_SIGNATURE,verify);
PHP_METHOD(OQS_SIGNATURE,__set);
PHP_METHOD(OQS_SIGNATURE,__get);
PHP_METHOD(OQS_SIGNATURE,__isset);
static PHP_FUNCTION(OQS_KEM_alg_identifier);
static PHP_FUNCTION(OQS_KEM_alg_count);
static PHP_FUNCTION(OQS_KEM_alg_is_enabled);
static PHP_METHOD(OQS_KEYENCAPSULATION,kem_struct_set);
static PHP_METHOD(OQS_KEYENCAPSULATION,kem_struct_get);
static PHP_METHOD(OQS_KEYENCAPSULATION,method_name_set);
static PHP_METHOD(OQS_KEYENCAPSULATION,method_name_get);
static PHP_METHOD(OQS_KEYENCAPSULATION,alg_version_set);
static PHP_METHOD(OQS_KEYENCAPSULATION,alg_version_get);
static PHP_METHOD(OQS_KEYENCAPSULATION,claimed_nist_level_set);
static PHP_METHOD(OQS_KEYENCAPSULATION,claimed_nist_level_get);
static PHP_METHOD(OQS_KEYENCAPSULATION,ind_cca_set);
static PHP_METHOD(OQS_KEYENCAPSULATION,ind_cca_get);
static PHP_METHOD(OQS_KEYENCAPSULATION,length_public_key_set);
static PHP_METHOD(OQS_KEYENCAPSULATION,length_public_key_get);
static PHP_METHOD(OQS_KEYENCAPSULATION,length_private_key_set);
static PHP_METHOD(OQS_KEYENCAPSULATION,length_private_key_get);
static PHP_METHOD(OQS_KEYENCAPSULATION,length_ciphertext_set);
static PHP_METHOD(OQS_KEYENCAPSULATION,length_ciphertext_get);
static PHP_METHOD(OQS_KEYENCAPSULATION,length_shared_secret_set);
static PHP_METHOD(OQS_KEYENCAPSULATION,length_shared_secret_get);
static PHP_METHOD(OQS_KEYENCAPSULATION,__construct);
static PHP_METHOD(OQS_KEYENCAPSULATION,keypair);
static PHP_METHOD(OQS_KEYENCAPSULATION,encapsulate);
static PHP_METHOD(OQS_KEYENCAPSULATION,decapsulate);
PHP_METHOD(OQS_KEYENCAPSULATION,__set);
PHP_METHOD(OQS_KEYENCAPSULATION,__get);
PHP_METHOD(OQS_KEYENCAPSULATION,__isset);
PHP_MINIT_FUNCTION(oqsphp);

#endif /* PHP_OQSPHP_H */
